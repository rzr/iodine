#!/bin/sh
# postinst script for iodine
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
        # we need a tun device
        if [ ! -c /dev/net/tun ] && [ -x /dev/MAKEDEV ] ; then
            echo "Creating device /dev/net/tun ..."
            cd /dev
            ./MAKEDEV tun || true
        fi 
        # and we want a special user
        adduser --quiet --system --home /var/run/iodine iodine
        # generate /etc/default/iodine
        db_get iodine/start_daemon
        START_IODINED=$RET
        db_get iodine/daemon_options
        IODINED_ARGS=$RET
        db_get iodine/daemon_password
        IODINED_PASSWORD=$RET
        cat <<EOF > /etc/default/iodine
# Default settings for iodine. This file is sourced from
# /etc/init.d/iodined
START_IODINED="$START_IODINED"
IODINED_ARGS="$IODINED_ARGS"
IODINED_PASSWORD="$IODINED_PASSWORD"
EOF
        [ -e /etc/default/iodine ] && chmod 600 /etc/default/iodine
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# tell debconf we are done. otherwise, it hangs waiting for the daemon.
db_stop;

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
